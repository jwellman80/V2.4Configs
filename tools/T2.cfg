# This file contains common pin mappings for the BIGTREETECH EBBT2
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBT2]
canbus_uuid: 7e9ac09822ed
# python3 ~/katapult/scripts/flashtool.py -i can0 -u 7e9ac09822ed -r
# python3 ~/katapult/scripts/flashtool.py -i can0 -u 7e9ac09822ed -f ~/klipper/out/klipper.bin
[adxl345]
cs_pin: EBBT2: PB12
spi_software_sclk_pin: EBBT2: PB10
spi_software_mosi_pin: EBBT2: PB11
spi_software_miso_pin: EBBT2: PB2
axes_map: x,y,z

[extruder2]
step_pin: EBBT2: PD0
dir_pin: !EBBT2: PD1
enable_pin: !EBBT2: PD2
heater_pin: EBBT2: PB13
sensor_pin: EBBT2: PA3
sensor_type: ATC Semitec 104NT-4-R025H42G

full_steps_per_rotation: 200
microsteps: 32
rotation_distance: 5.6
nozzle_diameter: 0.400
filament_diameter: 1.750

control: pid

pid_Kp: 30   #44.282 
pid_Ki: 10   #18.451 
pid_Kd: 26.570

min_temp: 0
max_temp: 300

[tmc2209 extruder2]
uart_pin: EBBT2: PA15
run_current: 0.5
stealthchop_threshold: 0

[heater_fan T2_hotend_fan]
pin: EBBT2: PA0
heater: extruder2
heater_temp: 50.0

[fan_generic T2_partfan]
pin: EBBT2: PA1

[gcode_macro AVR2]
variable_active: 0
variable_filament_consumed: 0
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    _TOOLCHANGER_DISABLE_FILAMENT_SENSORS
    SET_GCODE_VARIABLE MACRO=AVR2 VARIABLE=active VALUE=1
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SELECT_TOOL T=2
  {% endif %}

[gcode_macro T2]
variable_realtool: "AVR2"
variable_backuptool: ""
variable_color: ""
gcode:
  {% set consumed = printer["gcode_macro " ~ realtool].filament_consumed|int %}
  {% if consumed and backuptool %}
    { action_respond_info(realtool ~ " empty loading backup") }
    {backuptool}
  {% else %}
    { action_respond_info("Switching to " ~ realtool) }
    {realtool}
  {% endif %}


#change the tool numbers to the tool you are configuring, ie T1, T1, etc
[tool T2]
#change this too
tool_number: 2
#if this were T1, then this would be extruder2, etc
extruder: extruder2
#Change T2_partfan to tool number
fan: fan_generic T2_partfan
#Tool offset is -0.162500,-0.203125,0.097500
gcode_x_offset: -0.16250
gcode_y_offset: -0.203125
gcode_z_offset: 0.097500
# params_type: 'sc'
# #This is the path the tool change takes. Shouldn't have to change it. Unless
# #you are using a custom dock
# params_sc_path: [{'z':5, 'y':60}, {'z':5, 'y':0}, {'z':0, 'y':0}, {'z':-6, 'y':0}, {'z':-6, 'y': 10}]
#These are build specific, its where the tool is sititng in it's dock.
params_park_x: 267
params_park_y: 2
params_park_z: 310
# For InputShaper run per tool and enter the frequency here
params_input_shaper_type_x: 'mzv'
params_input_shaper_freq_x: 52
params_input_shaper_damping_ratio_x: 0.01
params_input_shaper_type_y: 'mzv'
params_input_shaper_freq_y: 37.2
params_input_shaper_damping_ratio_y: 0.01


[tool_probe T2]
pin: ^EBBT2:PB5
tool: 2
x_offset: 0 # X axis-sensor relative nozzle offset
y_offset: 0 # Y axis-sensor relative nozzle offset
z_offset: 0# Z axis-sensor relative nozzle offset
# drop_first_result: True # enable is on danger-klipper
speed: 5.0
samples: 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.02
samples_tolerance_retries: 3
activate_gcode:
    _TAP_PROBE_ACTIVATE HEATER=extruder2

[gcode_macro _T2_vars]
variable_logo_led_name:         "T2_leds"
variable_logo_idx:              "1"
# variable_nozzle_led_name:       "T2_leds"
# variable_nozzle_idx:            "2,3"
gcode:

[neopixel T2_leds]
pin: EBBT2:PD3
chain_count: 2
color_order: GRBW
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 1.0
initial_WHITE: 0.0

#[bltouch]
#sensor_pin: ^EBBT2:PB8
#control_pin: EBBT2:PB9

#[filament_switch_sensor switch_sensor]
#switch_pin: EBBT2:PB4

#[filament_motion_sensor motion_sensor]
#switch_pin: ^EBBT2:PB3