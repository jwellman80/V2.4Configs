# This file contains common pin mappings for the BIGTREETECH T0_EBB
# Canbus board. To use this config, the firmware should be compiled for the
# RP2040 with "USB" or "CAN bus (on gpio4/gpio5)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu T0_EBB]
canbus_uuid: 1f8179a9995c

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: T0_EBB:gpio28

[adxl345]
cs_pin: T0_EBB:gpio1
spi_software_sclk_pin: T0_EBB:gpio2
spi_software_mosi_pin: T0_EBB:gpio0
spi_software_miso_pin: T0_EBB:gpio3
axes_map: z,-y,x

# [resonance_tester]
# probe_points: 100, 100, 20
# accel_chip: adxl345

[extruder]
step_pin: T0_EBB:gpio18
dir_pin: !T0_EBB:gpio19
enable_pin: !T0_EBB:gpio17
heater_pin: T0_EBB:gpio7
sensor_pin: T0_EBB:gpio27

rotation_distance: 22.542877   #Bondtech 5mm Drive Gears
gear_ratio: 50:10
microsteps: 16
full_steps_per_rotation: 400    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.800
filament_diameter: 1.75

# Rapido: PT1000
# Bambu:  Generic 3950
sensor_type: Generic 3950


min_temp: 10
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
pressure_advance: 0.035
pressure_advance_smooth_time: 0.040
max_extrude_only_distance: 250

[tmc2209 extruder]
uart_pin: T0_EBB:gpio20

interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0

[fan]
pin: T0_EBB:gpio13
kick_start_time: 0.5
off_below: 0.10


[heater_fan hotend_fan]
pin: T0_EBB:gpio14
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

[neopixel sb_leds]
pin: T0_EBB:gpio16


[probe]
pin: ^T0_EBB:gpio24
#tool: 0
x_offset: 0 # X axis-sensor relative nozzle offset
y_offset: 0 # Y axis-sensor relative nozzle offset
#z_offset: 0 # Z axis-sensor relative nozzle offset
# drop_first_result: True # enable is on danger-klipper
speed: 5.0
samples: 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.02
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

# [mmu_sensors]
# extruder_switch_pin: ^T0_EBB:gpio24
# toolhead_switch_pin: ^T0_EBB:gpio22