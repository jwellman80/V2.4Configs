# This file contains common pin mappings for the BIGTREETECH EBBT0
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBT0]
canbus_uuid: aea517ef280c
# python3 ~/katapult/scripts/flashtool.py -i can0 -u aea517ef280c -r
# python3 ~/katapult/scripts/flashtool.py -i can0 -u aea517ef280c -f ~/klipper/out/klipper.bin
[adxl345]
cs_pin: EBBT0: PB12
spi_software_sclk_pin: EBBT0: PB10
spi_software_mosi_pin: EBBT0: PB11
spi_software_miso_pin: EBBT0: PB2
axes_map: x,y,z

[extruder]
step_pin: EBBT0: PD0
dir_pin: !EBBT0: PD1
enable_pin: !EBBT0: PD2
heater_pin: EBBT0: PB13
sensor_pin: EBBT0: PA3
sensor_type: ATC Semitec 104NT-4-R025H42G

full_steps_per_rotation: 200
microsteps: 32
rotation_distance: 5.6
nozzle_diameter: 0.400
filament_diameter: 1.750

control: pid

pid_Kp: 30   #44.282 
pid_Ki: 10   #18.451 
pid_Kd: 26.570

min_temp: 0
max_temp: 300

[tmc2209 extruder]
uart_pin: EBBT0: PA15
run_current: 0.5
stealthchop_threshold: 0

[heater_fan T0_hotend_fan]
pin: EBBT0: PA0
heater: extruder
heater_temp: 50.0

[multi_fan T0_partfan]
pin: EBBT0: PA1

[gcode_macro T0]
variable_color: ""
gcode:
  SELECT_TOOL T=0


#change the tool numbers to the tool you are configuring, ie T0, T1, etc
[tool T0]
#change this too
tool_number: 0
#if this were T1, then this would be extruder1, etc
extruder: extruder
#Change T0_partfan to tool number
fan: multi_fan T0_partfan
params_type: 'sc'
#This is the path the tool change takes. Shouldn't have to change it. Unless
#you are using a custom dock
params_sc_path: [{'z':5, 'y':60}, {'z':5, 'y':0}, {'z':0, 'y':0}, {'z':-6, 'y':0}, {'z':-6, 'y': 10}]
#These are build specific, its where the tool is sititng in it's dock.
params_park_x: 17
params_park_y: 3
params_park_z: 306
# For InputShaper run per tool and enter the frequency here
params_input_shaper_type_x: 'mzv'
params_input_shaper_freq_x: 52
params_input_shaper_damping_ratio_x: 0.01
params_input_shaper_type_y: 'mzv'
params_input_shaper_freq_y: 37.2
params_input_shaper_damping_ratio_y: 0.01


[tool_probe T0]
pin: ^EBBT0:PB5
tool: 0
x_offset: 0 # X axis-sensor relative nozzle offset
y_offset: 0 # Y axis-sensor relative nozzle offset
z_offset: -0.71 # -0.66 # Z axis-sensor relative nozzle offset  - previously -0.710
# drop_first_result: True # enable is on danger-klipper
speed: 5.0
samples: 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.02
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}



#[neopixel hotend_rgb]
#pin: EBBT0:PD3

#[bltouch]
#sensor_pin: ^EBBT0:PB8
#control_pin: EBBT0:PB9

#[filament_switch_sensor switch_sensor]
#switch_pin: EBBT0:PB4

#[filament_motion_sensor motion_sensor]
#switch_pin: ^EBBT0:PB3