[include mmu/base/*.cfg]
[include config_backup.cfg]
#[include mmu/base/included_options.cfg]
[include mmu/optional/client_macros.cfg]

# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[force_move]
enable_force_move: True

[include mainsail.cfg]
#[include macros/homing.cfg]

[mcu rpi]
serial: /tmp/klipper_host_mcu

[exclude_object]

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_060021001050534E4E313120-if00
restart_method: command
##--------------------------------------------------------------------

# [resonance_tester]
# accel_chip: beacon
# probe_points: 175, 175, 20


[printer]
kinematics: corexy
max_velocity: 500            #default 300 
max_accel: 3000              #default 2000
#max_accel_to_decel: 2500
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 80  
min_home_dist: 30
use_sensorless_homing: true
homing_retract_speed: 40
homing_retract_dist: 15

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG6
driver_SGTHRS: 130
home_current: 0.49

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_endstop: 357
position_max: 357


##--------------------------------------------------------------------
homing_speed: 80  
min_home_dist: 30
use_sensorless_homing: true
homing_retract_speed: 40
homing_retract_dist: 15

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG9
driver_SGTHRS: 130
home_current: 0.49
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 330
position_min: -30
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 0

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.542877   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10
microsteps: 16
full_steps_per_rotation: 400    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.800
filament_diameter: 1.75
heater_pin: PA2


##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
# Rapido: PT1000
# Bambu:  Generic 3950
sensor_type: Generic 3950
sensor_pin: PF4


min_temp: 10
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.035
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
max_extrude_only_distance: 250

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
##  Uncomment the following line if using the default SSR wiring from the docs site
heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
#heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
#control: watermark
#max_delta: 2.0
pwm_cycle_time: 0.0167
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

[verify_heater heater_bed]
check_gain_time: 90
heating_gain: 1

#####################################################################
#   Probe
#####################################################################

[scanner]
canbus_uuid: cf5f008c28e2            
x_offset: 0                          
y_offset: 26.5                    
calibration_method: touch 
sensor: cartographer
sensor_alt: carto
scanner_touch_z_offset: 0.05         
#is_non_critical: true

# [beacon]
# serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_8446E7355154354D38202020FF0A1710-if00
# x_offset: 0 
# y_offset: 26.5
# mesh_main_direction: x
# mesh_runs: 2
# z_settling_time:500 
# is_non_critical: True
# home_xy_position: 175, 175 # update with your safe position
# home_z_hop: 5
# home_z_hop_speed: 30
# home_xy_move_speed: 300
# home_method: contact
# home_method_when_homed: proximity
# home_autocalibrate: unhomed
# contact_activate_gcode: contact_cool


[gcode_macro contact_cool]
gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PF5
min_temp: 0
max_temp:100

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin: PA8
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan]
##  Controller fan - FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed
max_power: 0.4

[filament_switch_sensor RunoutSensor]
switch_pin: PG12

pause_on_runout: false
runout_gcode: M600


#####################################################################
#   LED Control
#####################################################################

[controller_fan lights]
pin: PD14
max_power: 0.25
heater: heater_bed
cycle_time: 0.001
hardware_pwm: True


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
gcode:
     {% if printer.webhooks.state|lower == 'ready' %}
          {% if printer.pause_resume.is_paused|lower == 'false' %}
               TURN_OFF_HEATERS
               M84
          {% else %}
               M104 S0
          {% endif %}
     {% endif %}
# 30 minute timeout
timeout: 1800

# [safe_z_home]
# ##  XY Location of the Z Endstop Switch
# ##  Update -10,-10 to the XY coordinates of your endstop pin 
# ##  (such as 157,305) after going through Z Endstop Pin
# ##  Location Definition step.
# home_xy_position:175, 175
# speed:100
# z_hop:10

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,30
   50,275
   300,275
   300,30

speed: 600
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]
speed: 600
horizontal_move_z: 1
mesh_min: 50, 30
mesh_max: 300,275
fade_start: 0 #0.6
fade_end: 0 #10.0
probe_count: 10,10
algorithm: bicubic
zero_reference_position: 175, 175


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>


[temperature_sensor Host]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


#####################################################################
#   Macros
#####################################################################


[gcode_macro CG28]
gcode:
    {% if printer.toolhead.homed_axes != 'xyz' %}
      STATUS_HOMING
      G28
      STATUS_READY
    {% endif %}
  


[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRIME_LINE]
gcode:
    SAVE_GCODE_STATE NAME=PRIME_LINE_STATE
    M117 Priming
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0
    ; Move to start of line.
    G1 Z10 F900
    G1 X240 Y5 F18000
    G1 Z1.0 F900
    ; Print the line.
    G91                ; Relative coordinates.
    G1 X100 E25 F1000  ; Extrude filament 25mm (how much it retracted in PRINT_END).
    G1 Y+2 F1000
    G1 X-100 E9 F1000    ; Print second part of the line.
    G1 E-0.5 F3000      ; Retract to avoid stringing.
    G1 X0.5 E0 F1000    ; Wipe back to break string.
    G1 X-5.5 E0 F1000   ; Wipe forward to break string.
    RESTORE_GCODE_STATE NAME=PRIME_LINE_STATE

[gcode_macro COOL_CLEAN]  
gcode:
  {% set MIN_TEMP = params.MIN_TEMP | default(150) | int %}

  M117 Running Cool Clean
  BLOBIFIER_PARK
  {% if printer.extruder.temperature >= MIN_TEMP %}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    {% for _ in range(1, 15) %}
        _COOL_CLEAN2 MIN_TEMP={MIN_TEMP}
    {% endfor %}
  {% endif %}
  M117 Cool Clean Complete

[gcode_macro _COOL_CLEAN2]
gcode: 
  {% set MIN_TEMP = params.MIN_TEMP | default(150) | int %}

  {% if printer.extruder.temperature >= MIN_TEMP %}
    M117 Temp: { printer.extruder.temperature | int }
    BLOBIFIER_CLEAN
    G4 P10000 # wait 10 seconds
  {% endif%}

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set CHAMBER = params.CHAMBER | default(0) | float %}
    {% set SOAK_TIME = params.SOAK_TIME_MINS | default(5) | int %}
    {% set DO_MESH = params.DO_MESH | default(1) | int %}

    BED_MESH_CLEAR
    
    STATUS_HEATING
    M140 S{params.BED}
    
    M117 Homing
    G28 Z METHOD=CONTACT CALIBRATE=1 
    
    G90
    G0 X175 Y175 F15000
    G0 Z5

    M117 Waiting for Bed Temp {params.BED}C
    M190 S{params.BED}

    # Heat the extruder so we can clean it. 
    M117 Heating Extruder for Cleaning
    G0 X60 Y357 F15000
    M109 S{params.EXTRUDER}
    COOL_CLEAN

    {% if CHAMBER > 0 and printer['temperature_sensor chamber'].temperature < CHAMBER %}
        M117 Waiting for Chamber  Temp {CHAMBER}C
        # Park for Heat Soak
        G0 X175 Y175 F15000
        G0 Z5

        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBER}
        # start nozzle heating for soak. 
        # M104 S{params.EXTRUDER}
        {% for i in range(0, SOAK_TIME) %}
              M117 Heat Soak {SOAK_TIME - i | int}m Remaining
              G4 P60000
        {% endfor %}
    {% endif %}


    {% if printer.quad_gantry_level.applied == False %}
        M117 "Quad Gantry Level"
        STATUS_LEVELING
        QUAD_GANTRY_LEVEL
        STATUS_READY
    {% endif %}

    M117 Heating and stabilizing nozzle  
    G4 P20000
    M109 S150
    G28 Z METHOD=CONTACT CALIBRATE=0

    
    {% if DO_MESH == 1 %}
    M117 Bed Mesh 
      BED_MESH_CALIBRATE ADAPTIVE=1 RUNS=2
    {% endif %}
    
    BLOBIFIER_PARK

    M117 Nozzle Heating {params.EXTRUDER}C
    M109 S{params.EXTRUDER}

    BLOBIFIER_CLEAN

    M117 
    STATUS_PRINTING

    SET_IDLE_TIMEOUT TIMEOUT=43200 ; 12hours



[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 50, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    SET_LOGO_LEDS_OFF
    SET_NOZZLE_LEDS_OFF

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X5 Y357
    M107                                     ; turn off fan
    
    #BED_MESH_CLEAR

    SET_IDLE_TIMEOUT TIMEOUT=1800
    
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[pause_resume]
recover_velocity: 50.0

######################################################################
## Filament Change                                                  ##
######################################################################
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 130mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "SWAP_RESUME" gcode.
[gcode_macro M600]
########### Gcode ############
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
        

#    Use this command resume during a mid print filament swap (DONT USE OCTO/MAINSAIL/DWC RESUME)
[gcode_macro SWAP_RESUME] 
gcode:
    LOAD_FILAMENT
    RESTORE_GCODE_STATE NAME=M600_state
    resume


[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=load_filament_state
    BLOBIFIER_PARK
    G91
	# Extrude 200 mm
	G0 E50 F300
	G0 E50 F300
	G0 E50 F300
	G0 E50 F300
    G0 E-5 F2000

    BLOBIFIER_CLEAN
    RESTORE_GCODE_STATE NAME=load_filament_state


[include macros/nozzle_scrub.cfg]
[include macros/heat_soak.cfg]
[include macros/bedfans.cfg]
[include macros/stealthburner.cfg]
[include macros/misc_macros.cfg]
[include ebb_can.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 1.850
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 35.247
#*# pid_ki = 9.526
#*# pid_kd = 32.603
#*# pid_version = 1
#*# pid_target = 260.00
#*# pid_tolerance = 0.0200
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 52
#*# shaper_type_y = mzv
#*# shaper_freq_y = 37.2
